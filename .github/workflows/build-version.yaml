name: Release a Docker image
on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'
permissions: write-all
jobs:
  build:
    name: Build & push docker image
    runs-on: ubuntu-latest
    env:
      IMG_NAME: ${{ github.repository }}
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Set output
      id: vars
      run: echo "tag=${GITHUB_REF#refs/*/}" >> $GITHUB_OUTPUT
    - name: Check output
      env:
        RELEASE_VERSION: ${{ steps.vars.outputs.tag }}
      run: |
        echo $RELEASE_VERSION
        echo ${{ steps.vars.outputs.tag }}
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.ACCESS_KEY }}
        aws-secret-access-key: ${{ secrets.SECRET_KEY }}
        aws-region: ap-southeast-1
    # - name: Docker metadata
    #   id: metadata
    #   uses: docker/metadata-action@v3
    #   with:
    #     images: ${{ env.IMG_NAME }}
    #     tags: |
    #       type=semver,pattern={{version}}
    #       type=semver,pattern={{major}}.{{minor}}
    #       type=raw,value={{sha}},enable=${{ github.ref_type != 'tag' }}
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
    - name: Build, tag, and push the image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: ${{ secrets.REPO_NAME }}
        IMAGE_TAG: ${{ steps.vars.outputs.tag }}
      run: |
        # Build a docker container and push it to ECR
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        # echo "Pushing image to ECR..."
        # docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        # echo "name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      # env:
      #   ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
      #   ECR_REPOSITORY: ${{ secrets.REPO_NAME }}
      #   IMAGE_TAG: ${{ steps.vars.outputs.tag }}
      with:
        image-ref: ${{ steps.login-ecr.outputs.registry }}/${{ secrets.REPO_NAME }}:${{ steps.vars.outputs.tag }}
        # format: 'table'
        format: 'table'
        vuln-type: 'os,library'
        severity: 'CRITICAL,HIGH'
        output: 'trivy-results.sarif'
        exit-code: '1'
        # ignore-unfixed: true
    # - name: Upload Trivy scan results to GitHub Security tab
    #   uses: github/codeql-action/upload-sarif@v2
    #   with:
    #     sarif_file: 'trivy-results.sarif'
    #     category: 'image'
    - name: Push the image to Amazon ECR
      id: push-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: ${{ secrets.REPO_NAME }}
        IMAGE_TAG: ${{ steps.vars.outputs.tag }}
      run: |
        echo "Pushing image to ECR..."
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        echo "name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT
    # - name: Build and push Docker image
    #   uses: docker/build-push-action@v2
    #   with:
    #     context: .
    #     push: ${{ github.event.base_ref =='refs/heads/main' && github.ref_type == 'tag' && !startsWith(github.ref, 'refs/tags/v0.')}}
    #     tags: ${{ steps.metadata.outputs.tags }}
    #     labels: ${{ steps.metadata.outputs.labels }}
